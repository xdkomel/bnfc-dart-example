// File generated by the BNF Converter (bnfc 2.9.6).

import 'package:antlr4/antlr4.dart';
import 'ast.dart';
import 'ArithParser.dart';  // fix this line depending on where the stellaParser is being lcated
int? buildInt(Token? t) => t?.text != null ? int.tryParse(t!.text!) : null;
double? buildDouble(Token? t) => t?.text != null ? double.tryParse(t!.text!) : null;
String? buildString(Token? t) => t?.text;
Exp? buildExp2(Exp2Context? ctx) {
  if (ctx is ConstIntegerContext) return buildConstInteger(ctx);
  if (ctx is ConstDoubleContext) return buildConstDouble(ctx);
  if (ctx is BracketsContext) return buildBrackets(ctx);
  return null;
}
ConstInteger? buildConstInteger(ConstIntegerContext? ctx) {
  final integer = buildInt(ctx?.p_1_1);
  if (
    integer == null
  ) {
    return null;
  }
  return ConstInteger(
    integer: integer,
  );
}
ConstDouble? buildConstDouble(ConstDoubleContext? ctx) {
  final myDouble = buildDouble(ctx?.p_2_1);
  if (
    myDouble == null
  ) {
    return null;
  }
  return ConstDouble(
    myDouble: myDouble,
  );
}
Brackets? buildBrackets(BracketsContext? ctx) {
  final exp = buildExp(ctx?.p_3_2);
  if (
    exp == null
  ) {
    return null;
  }
  return Brackets(
    exp: exp,
  );
}
Exp? buildExp1(Exp1Context? ctx) {
  if (ctx is MulContext) return buildMul(ctx);
  if (ctx is DivContext) return buildDiv(ctx);
  if (ctx is Coercion_Exp1_3Context) return buildExp2(ctx.p_3_1);
  return null;
}
Mul? buildMul(MulContext? ctx) {
  final exp1 = buildExp1(ctx?.p_1_1);
  final exp2 = buildExp2(ctx?.p_1_3);
  if (
    exp1 == null || exp2 == null
  ) {
    return null;
  }
  return Mul(
    exp1: exp1,
    exp2: exp2,
  );
}
Div? buildDiv(DivContext? ctx) {
  final exp1 = buildExp1(ctx?.p_2_1);
  final exp2 = buildExp2(ctx?.p_2_3);
  if (
    exp1 == null || exp2 == null
  ) {
    return null;
  }
  return Div(
    exp1: exp1,
    exp2: exp2,
  );
}
Exp? buildExp(ExpContext? ctx) {
  if (ctx is SumContext) return buildSum(ctx);
  if (ctx is SubContext) return buildSub(ctx);
  if (ctx is Coercion_Exp_3Context) return buildExp1(ctx.p_3_1);
  return null;
}
Sum? buildSum(SumContext? ctx) {
  final exp1 = buildExp(ctx?.p_1_1);
  final exp2 = buildExp1(ctx?.p_1_3);
  if (
    exp1 == null || exp2 == null
  ) {
    return null;
  }
  return Sum(
    exp1: exp1,
    exp2: exp2,
  );
}
Sub? buildSub(SubContext? ctx) {
  final exp1 = buildExp(ctx?.p_2_1);
  final exp2 = buildExp1(ctx?.p_2_3);
  if (
    exp1 == null || exp2 == null
  ) {
    return null;
  }
  return Sub(
    exp1: exp1,
    exp2: exp2,
  );
}
